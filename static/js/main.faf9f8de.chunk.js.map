{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximun","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","Date","toString","filteredYear","setFilteredYear","filteredExpenses","filter","console","log","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","onSaveExpenseData","alert","type","evt","prevState","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faf9f8de.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const classes = \"card \" + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n    }\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n                <ExpenseItem key={expense.id} title={expense.title} date={expense.date} amount={expense.amount} />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n    const totalMaximun = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximun}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        {\r\n            label: \"Jan\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Feb\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Mar\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Apr\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"May\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Jun\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Jul\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Aug\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Sep\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Oct\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Nov\",\r\n            value: 0,\r\n        },\r\n        {\r\n            label: \"Dec\",\r\n            value: 0,\r\n        },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesList from \"./ExpensesList\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState(new Date().getFullYear().toString());\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter((expense) => {\r\n        console.log(expense);\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <div className=\"expenses\">\r\n            <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses}></ExpensesList>\r\n        </div>\r\n    );\r\n};\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    // const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    // const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    // const [enteredDate, setEnteredDate] = useState(\"\");\r\n    const [userInput, setUserInput] = useState({\r\n        enteredTitle: \"\",\r\n        enteredAmount: \"\",\r\n        enteredDate: \"\",\r\n    });\r\n\r\n    const titleChangeHandler = (evt) => {\r\n        // setEnteredTitle(evt.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle: evt.target.value,\r\n        // });\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredTitle: evt.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const amountChangeHandler = (evt) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredAmount: evt.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const dateChangeHandler = (evt) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredDate: evt.target.value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: userInput.enteredTitle,\r\n            amount: +userInput.enteredAmount,\r\n            date: new Date(userInput.enteredDate),\r\n        };\r\n        props.onSaveExpenseData(expenseData);\r\n        alert(\"Added Successfully!\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={userInput.enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        value={userInput.enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        min=\"2019-01-01\"\r\n                        step=\"2022-12-31\"\r\n                        value={userInput.enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            id: Math.random().toString(),\r\n            ...enteredExpenseData,\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n    {\n        id: \"e1\",\n        title: \"Toilet Paper\",\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n        id: \"e3\",\n        title: \"Car Insurance\",\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"New Desk (Wooden)\",\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nconst App = () => {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = (expense) => {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses];\n        });\n    };\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}